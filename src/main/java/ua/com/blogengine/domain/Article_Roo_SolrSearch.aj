// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package ua.com.blogengine.domain;

import java.util.ArrayList;
import java.util.Collection;
import java.util.List;
import javax.persistence.PostPersist;
import javax.persistence.PostUpdate;
import javax.persistence.PreRemove;
import org.apache.solr.client.solrj.SolrQuery;
import org.apache.solr.client.solrj.SolrServer;
import org.apache.solr.client.solrj.response.QueryResponse;
import org.apache.solr.common.SolrInputDocument;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.scheduling.annotation.Async;
import ua.com.blogengine.domain.Article;

privileged aspect Article_Roo_SolrSearch {
    
    @Autowired
    transient SolrServer Article.solrServer;
    
    public static QueryResponse Article.search(String queryString) {
        String searchString = "Article_solrsummary_t:" + queryString;
        return search(new SolrQuery(searchString.toLowerCase()));
    }
    
    public static QueryResponse Article.search(SolrQuery query) {
        try {
            return solrServer().query(query);
        } catch (Exception e) {
            e.printStackTrace();
        }
        return new QueryResponse();
    }
    
    public static void Article.indexArticle(Article article) {
        List<Article> articles = new ArrayList<Article>();
        articles.add(article);
        indexArticles(articles);
    }
    
    @Async
    public static void Article.indexArticles(Collection<Article> articles) {
        List<SolrInputDocument> documents = new ArrayList<SolrInputDocument>();
        for (Article article : articles) {
            SolrInputDocument sid = new SolrInputDocument();
            sid.addField("id", "article_" + article.getId());
            sid.addField("article.title_s", article.getTitle());
            sid.addField("article.urltitle_s", article.getUrlTitle());
            sid.addField("article.content_s", article.getContent());
            sid.addField("article.htmlpreamble_s", article.getHtmlPreamble());
            sid.addField("article.htmlcontent_s", article.getHtmlContent());
            sid.addField("article.submissiondate_dt", article.getSubmissionDate());
            sid.addField("article.publicationdate_dt", article.getPublicationDate());
            sid.addField("article.section_t", article.getSection());
            sid.addField("article.id_l", article.getId());
            // Add summary field to allow searching documents for objects of this type
            sid.addField("article_solrsummary_t", new StringBuilder().append(article.getTitle()).append(" ").append(article.getUrlTitle()).append(" ").append(article.getContent()).append(" ").append(article.getHtmlPreamble()).append(" ").append(article.getHtmlContent()).append(" ").append(article.getSubmissionDate()).append(" ").append(article.getPublicationDate()).append(" ").append(article.getSection()).append(" ").append(article.getId()));
            documents.add(sid);
        }
        try {
            SolrServer solrServer = solrServer();
            solrServer.add(documents);
            solrServer.commit();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    @Async
    public static void Article.deleteIndex(Article article) {
        SolrServer solrServer = solrServer();
        try {
            solrServer.deleteById("article_" + article.getId());
            solrServer.commit();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    @PostUpdate
    @PostPersist
    private void Article.postPersistOrUpdate() {
        indexArticle(this);
    }
    
    @PreRemove
    private void Article.preRemove() {
        deleteIndex(this);
    }
    
    public static SolrServer Article.solrServer() {
        SolrServer _solrServer = new Article().solrServer;
        if (_solrServer == null) throw new IllegalStateException("Solr server has not been injected (is the Spring Aspects JAR configured as an AJC/AJDT aspects library?)");
        return _solrServer;
    }
    
}
